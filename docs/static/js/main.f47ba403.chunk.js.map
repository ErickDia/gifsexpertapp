{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifCard.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","categories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","find","categoria","cats","console","warn","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","dataCompleta","gifs","data","map","img","id","title","images","downsized_medium","GifCard","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAErC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAAMT,EAAWU,MAAM,SAAEC,GAAF,OAAiBA,IAAcR,MAChFF,GAAe,SAACW,GAAD,OAAWT,EAAWK,QAAtB,mBAAiCI,OAChDR,EAAc,KAEdS,QAAQC,KAAK,oFAMjB,SACI,uBACIC,KAAK,OACLC,YAAY,oBACZC,MAAOd,EACPe,SAxBc,SAAEZ,GAExBF,EAAcE,EAAEa,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAWH,GAFxF,sBAGKI,MAAOF,GAHZ,cAGbG,EAHa,gBAIQA,EAAUC,OAJlB,cAIbC,EAJa,OAKbC,EAAOD,EAAaE,KAAKC,KAAK,SAAEC,GAAF,YAChC,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QATvB,kBAaZM,GAbY,2CAAH,sDCEPQ,EAAU,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMX,EAAS,EAATA,IAC3B,OACI,sBAAKe,UAAU,yCAAf,UAEI,qBAAKC,IAAOhB,EAAKiB,IAAKN,IACtB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GACzB,MAA0BnB,mBAAS,CAC/B4B,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CAACd,KAAMiB,EAAML,SAAQ,SAGvC,CAACrB,IAEGsB,EDZuBK,CAAa3B,GAA/Bc,EAAZ,EAAOL,KAAYY,EAAnB,EAAmBA,QAEnB,OACI,qCACI,qBAAIJ,UAAU,sCAAd,cAAsDjB,EAAtD,OAGIqB,EACA,4CACC,qBAAKJ,UAAU,YAAf,SAEOH,EAAOJ,KAAK,SAACkB,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAMhB,aEf9BiB,EAAe,WAExB,MAAoChD,mBAAS,CAAC,cAA9C,mBAAOF,EAAP,KAAmBC,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaD,WAAcA,EAAYC,cAAiBA,IACxD,uBAEA,6BACKD,EAAW+B,KAAI,SAACpB,GAAD,OAAe,cAAC,EAAD,CAEKU,SAAYV,GADPA,Y,YCZzDwC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f47ba403.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({categories, setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        // console.log(e.target.value);\n        setInputValue(e.target.value)\n    }\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(inputValue.trim().length > 2 && !categories.find( ( categoria ) => categoria === inputValue) ){\n            setCategories( (cats) => [inputValue.trim(), ...cats ] )\n            setInputValue('')\n        }else{\n            console.warn('ingresaste menos de 2 caracteres o repetiste alguno de las series ya existentes');\n        }\n        \n    }\n\n    return (\n        <form onSubmit = {handleSubmit}>\n            <input \n                type=\"text\" \n                placeholder='ingrese una serie' \n                value={inputValue}\n                onChange={ handleInputChange }/>\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=3ud8sAhry8JKjmbAiYYCeRZvRuC8Gks4&q=${ encodeURI( category )}&limit=10`;\n    const respuesta = await fetch( url );\n    const dataCompleta = await respuesta.json();\n    const gifs = dataCompleta.data.map( ( img ) => (\n        {\n            id: img.id, \n            title: img.title,\n            url: img.images?.downsized_medium.url\n        })\n    );\n    \n    return gifs;\n\n}","import React from 'react'\n\nexport const GifCard = ({title,url}) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            \n            <img src = {url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifCard } from './GifCard';\n\nexport const GifGrid = ( {category} ) => {\n\n    const {data:images,loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className='animate__animated animate__bounceIn'> {category} </h3>\n\n            { \n                loading ? \n                <p>Cargando...</p> : \n                (<div className='card-grid'> \n                    {\n                        images.map( (image) => ( \n                            <GifCard \n                                key={image.id} \n                                {...image} \n                            /> \n                        ))\n                    }\n                </div>)\n            }\n\n            \n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {       \n\n        getGifs(category)\n            .then(imgs => {\n                setstate({data: imgs, loading:false})\n            });\n\n    }, [category])\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['one punch']);\n\n    // const handleApp = () => {\n    //     setCategories(['Rick and Morty', ...categories])\n    // }\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory categories = {categories} setCategories = {setCategories}/>\n            <hr/>\n            {/* <button onClick={handleApp}>Agregar</button> */}\n            <ol>\n                {categories.map((categoria) => <GifGrid \n                                                    key={categoria} \n                                                    category = {categoria}\n                                                />)}\n            </ol>\n        </>\n        \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//COMPONENTS\nimport { GifExpertApp } from './GifExpertApp';\n//CSS\nimport \"animate.css\";\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}